// Code generated by ogen, DO NOT EDIT.

package order_v1

import (
	"fmt"
)

func (s *GenericErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// Ref: #/components/schemas/bad_request_error
type BadRequestError struct {
	// HTTP-код ошибки.
	Code int `json:"code"`
	// Описание ошибки.
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *BadRequestError) GetCode() int {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *BadRequestError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *BadRequestError) SetCode(val int) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *BadRequestError) SetMessage(val string) {
	s.Message = val
}

func (*BadRequestError) createOrderRes()    {}
func (*BadRequestError) payOrderByUuidRes() {}

type CanselOrderByIdNoContent struct {
	// HTTP-код ответа.
	Code int `json:"code"`
	// Описание результата.
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *CanselOrderByIdNoContent) GetCode() int {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *CanselOrderByIdNoContent) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *CanselOrderByIdNoContent) SetCode(val int) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *CanselOrderByIdNoContent) SetMessage(val string) {
	s.Message = val
}

func (*CanselOrderByIdNoContent) canselOrderByIdRes() {}

// Ref: #/components/schemas/conflict_error
type ConflictError struct {
	// HTTP-код ошибки.
	Code int `json:"code"`
	// Описание ошибки.
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *ConflictError) GetCode() int {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *ConflictError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *ConflictError) SetCode(val int) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *ConflictError) SetMessage(val string) {
	s.Message = val
}

func (*ConflictError) canselOrderByIdRes() {}

// Ref: #/components/schemas/create_order_request
type CreateOrderRequest struct {
	UserUUID UserUUID `json:"user_uuid"`
	// Список идентификаторов запчастей.
	PartUuids []PartUUID `json:"part_uuids"`
}

// GetUserUUID returns the value of UserUUID.
func (s *CreateOrderRequest) GetUserUUID() UserUUID {
	return s.UserUUID
}

// GetPartUuids returns the value of PartUuids.
func (s *CreateOrderRequest) GetPartUuids() []PartUUID {
	return s.PartUuids
}

// SetUserUUID sets the value of UserUUID.
func (s *CreateOrderRequest) SetUserUUID(val UserUUID) {
	s.UserUUID = val
}

// SetPartUuids sets the value of PartUuids.
func (s *CreateOrderRequest) SetPartUuids(val []PartUUID) {
	s.PartUuids = val
}

// Ref: #/components/schemas/create_order_response
type CreateOrderResponse struct {
	OrderUUID OrderUUID `json:"order_uuid"`
	// Общая сумма заказа.
	TotalPrice float32 `json:"total_price"`
}

// GetOrderUUID returns the value of OrderUUID.
func (s *CreateOrderResponse) GetOrderUUID() OrderUUID {
	return s.OrderUUID
}

// GetTotalPrice returns the value of TotalPrice.
func (s *CreateOrderResponse) GetTotalPrice() float32 {
	return s.TotalPrice
}

// SetOrderUUID sets the value of OrderUUID.
func (s *CreateOrderResponse) SetOrderUUID(val OrderUUID) {
	s.OrderUUID = val
}

// SetTotalPrice sets the value of TotalPrice.
func (s *CreateOrderResponse) SetTotalPrice(val float32) {
	s.TotalPrice = val
}

func (*CreateOrderResponse) createOrderRes() {}

// Ref: #/components/schemas/generic_error
type GenericError struct {
	// HTTP-код ошибки.
	Code OptInt `json:"code"`
	// Описание ошибки.
	Message OptString `json:"message"`
}

// GetCode returns the value of Code.
func (s *GenericError) GetCode() OptInt {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *GenericError) GetMessage() OptString {
	return s.Message
}

// SetCode sets the value of Code.
func (s *GenericError) SetCode(val OptInt) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *GenericError) SetMessage(val OptString) {
	s.Message = val
}

// GenericErrorStatusCode wraps GenericError with StatusCode.
type GenericErrorStatusCode struct {
	StatusCode int
	Response   GenericError
}

// GetStatusCode returns the value of StatusCode.
func (s *GenericErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *GenericErrorStatusCode) GetResponse() GenericError {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *GenericErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *GenericErrorStatusCode) SetResponse(val GenericError) {
	s.Response = val
}

// Ref: #/components/schemas/get_order_response
type GetOrderResponse struct {
	OrderUUID OrderUUID `json:"order_uuid"`
	UserUUID  UserUUID  `json:"user_uuid"`
	// Список идентификаторов запчастей.
	PartUuids []PartUUID `json:"part_uuids"`
	// Сумма заказа.
	TotalPrice      float32         `json:"total_price"`
	TransactionUUID TransactionUUID `json:"transaction_uuid"`
	// Код способа оплаты.
	PaymentMethod NilString   `json:"payment_method"`
	Status        OrderStatus `json:"status"`
}

// GetOrderUUID returns the value of OrderUUID.
func (s *GetOrderResponse) GetOrderUUID() OrderUUID {
	return s.OrderUUID
}

// GetUserUUID returns the value of UserUUID.
func (s *GetOrderResponse) GetUserUUID() UserUUID {
	return s.UserUUID
}

// GetPartUuids returns the value of PartUuids.
func (s *GetOrderResponse) GetPartUuids() []PartUUID {
	return s.PartUuids
}

// GetTotalPrice returns the value of TotalPrice.
func (s *GetOrderResponse) GetTotalPrice() float32 {
	return s.TotalPrice
}

// GetTransactionUUID returns the value of TransactionUUID.
func (s *GetOrderResponse) GetTransactionUUID() TransactionUUID {
	return s.TransactionUUID
}

// GetPaymentMethod returns the value of PaymentMethod.
func (s *GetOrderResponse) GetPaymentMethod() NilString {
	return s.PaymentMethod
}

// GetStatus returns the value of Status.
func (s *GetOrderResponse) GetStatus() OrderStatus {
	return s.Status
}

// SetOrderUUID sets the value of OrderUUID.
func (s *GetOrderResponse) SetOrderUUID(val OrderUUID) {
	s.OrderUUID = val
}

// SetUserUUID sets the value of UserUUID.
func (s *GetOrderResponse) SetUserUUID(val UserUUID) {
	s.UserUUID = val
}

// SetPartUuids sets the value of PartUuids.
func (s *GetOrderResponse) SetPartUuids(val []PartUUID) {
	s.PartUuids = val
}

// SetTotalPrice sets the value of TotalPrice.
func (s *GetOrderResponse) SetTotalPrice(val float32) {
	s.TotalPrice = val
}

// SetTransactionUUID sets the value of TransactionUUID.
func (s *GetOrderResponse) SetTransactionUUID(val TransactionUUID) {
	s.TransactionUUID = val
}

// SetPaymentMethod sets the value of PaymentMethod.
func (s *GetOrderResponse) SetPaymentMethod(val NilString) {
	s.PaymentMethod = val
}

// SetStatus sets the value of Status.
func (s *GetOrderResponse) SetStatus(val OrderStatus) {
	s.Status = val
}

func (*GetOrderResponse) getOrderByUuidRes() {}

// Ref: #/components/schemas/internal_server_error
type InternalServerError struct {
	// HTTP-код ошибки.
	Code int `json:"code"`
	// Описание ошибки.
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *InternalServerError) GetCode() int {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *InternalServerError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *InternalServerError) SetCode(val int) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *InternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*InternalServerError) createOrderRes()    {}
func (*InternalServerError) getOrderByUuidRes() {}
func (*InternalServerError) payOrderByUuidRes() {}

// NewNilString returns new NilString with value set to v.
func NewNilString(v string) NilString {
	return NilString{
		Value: v,
	}
}

// NilString is nullable string.
type NilString struct {
	Value string
	Null  bool
}

// SetTo sets value to v.
func (o *NilString) SetTo(v string) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilString) SetToNull() {
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/not_found_error
type NotFoundError struct {
	// HTTP-код ошибки.
	Code int `json:"code"`
	// Описание ошибки.
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *NotFoundError) GetCode() int {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *NotFoundError) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *NotFoundError) SetCode(val int) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *NotFoundError) SetMessage(val string) {
	s.Message = val
}

func (*NotFoundError) canselOrderByIdRes() {}
func (*NotFoundError) createOrderRes()     {}
func (*NotFoundError) getOrderByUuidRes()  {}
func (*NotFoundError) payOrderByUuidRes()  {}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type OrderStatus string

type OrderUUID string

type PartUUID string

// Ref: #/components/schemas/pay_order_request
type PayOrderRequest struct {
	PaymentMethod PaymentMethod `json:"payment_method"`
}

// GetPaymentMethod returns the value of PaymentMethod.
func (s *PayOrderRequest) GetPaymentMethod() PaymentMethod {
	return s.PaymentMethod
}

// SetPaymentMethod sets the value of PaymentMethod.
func (s *PayOrderRequest) SetPaymentMethod(val PaymentMethod) {
	s.PaymentMethod = val
}

// Ref: #/components/schemas/pay_order_response
type PayOrderResponse struct {
	TransactionUUID TransactionUUID `json:"transaction_uuid"`
}

// GetTransactionUUID returns the value of TransactionUUID.
func (s *PayOrderResponse) GetTransactionUUID() TransactionUUID {
	return s.TransactionUUID
}

// SetTransactionUUID sets the value of TransactionUUID.
func (s *PayOrderResponse) SetTransactionUUID(val TransactionUUID) {
	s.TransactionUUID = val
}

func (*PayOrderResponse) payOrderByUuidRes() {}

type PaymentMethod string

type TransactionUUID string

type UserUUID string
